{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/HookUserStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","HookUserStatus","props","useState","editMode","setEditMode","status","changeStatus","useEffect","e","autoFocus","defaultValue","onBlur","updateStatus","onInput","target","value","onDoubleClick","ProfileInfo","profile","setNewStatusThunkCreator","className","s","mainInformation","mainInfoBlock","src","photos","large","alt","information","fullName","contacts","facebook","Post","posts","slice","reverse","map","item","post","post_info","message","likes","id","MyPosts","React","memo","posts_wrapper","my_posts","NewPostFormContainer","onSubmit","data","addPost","text","maxLengthCreator","maxLength","reduxForm","form","new_post","handleSubmit","Field","component","Textarea","placeholder","name","validate","isRequired","DispatchToProps","MyPostsContainer","connect","state","profilePage","newPostText","Profile","Object","keys","length","Preloader","isFetching","ProfileContainer","this","setFetching","userId","match","params","user_id","history","push","getUserProfileThunkCreator","getStatusThunkCreator","PureComponent","dispatchToProps","setUserProfile","compose","searchPage","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.fba20ae5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInformation\":\"ProfileInfo_mainInformation__1qGR1\",\"mainInfoBlock\":\"ProfileInfo_mainInfoBlock__2iq04\",\"information\":\"ProfileInfo_information__3zagN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_wrapper\":\"MyPosts_posts_wrapper__P74T2\",\"my_posts\":\"MyPosts_my_posts__9WkXg\",\"new_post\":\"MyPosts_new_post__1sF5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2tFQt\",\"post_info\":\"Post_post_info__77KT5\"};","import React from 'react';\nimport {useState, useEffect} from 'react';\n\nconst HookUserStatus = props => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, changeStatus] = useState(props.status);\n\n    useEffect((e) => {\n        changeStatus(props.status);\n    }, [props.status]);\n\n    const editModeOn = () => {\n        setEditMode(true);\n    }\n\n    const editModeOff = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const editStatus = (e) => {\n        changeStatus(e.target.value);\n    }\n\n    return <>\n        {editMode\n            ? <input\n                autoFocus={true}\n                defaultValue={status}\n                onBlur={editModeOff}\n                onInput={editStatus}\n            />\n            : <p onDoubleClick={editModeOn}\n            >Status: {props.status || '---'}</p>\n        }\n    </>\n}\n\nexport default HookUserStatus;\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport HookUserStatus from \"./HookUserStatus\";\n\nconst ProfileInfo = ({profile, status, setNewStatusThunkCreator}) => {\n    return <div className={s.mainInformation}>\n            <div className={s.mainInfoBlock}>\n                <img src={profile.photos.large\n                    ? profile.photos.large\n                    : \"https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png\"} alt=\"ava\"/>\n                <div className={s.information}>\n                    <p>Name: {profile.fullName}</p>\n                    <HookUserStatus status={status} updateStatus={setNewStatusThunkCreator}/>\n                    <p>facebook: {profile.contacts.facebook}</p>\n                    <p>Online</p>\n                </div>\n            </div>\n        </div>\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    let {posts} = props;\n\n    return (\n        <div>\n            {posts.slice(0).reverse().map((item) => (\n                <div key={item.id} className={s.post}>\n                    <img src=\"https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png\" alt=\"\"/>\n                    <div className={s.post_info}>\n                        <p>{item.message}</p>\n                        <span>Likes: {item.likes}</span>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\nexport default Post;","import React from \"react\";\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {isRequired, maxLength} from \"../../utils/validation\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst MyPosts = React.memo((props) => {\n\n    let addNewPost = (data) => {\n        props.addPost(data.text);\n    }\n\n    return (\n        <div className={s.posts_wrapper}>\n            <p className={s.my_posts}>My Posts</p>\n            <NewPostFormContainer posts={props.posts} onSubmit={addNewPost}/>\n            <div className={s.posts}>\n                <Post posts={props.posts}/>\n            </div>\n        </div>\n    );\n});\n\nconst maxLengthCreator = maxLength(50);\n\nconst NewPostForm = (props) => {\n    return <form className={s.new_post} onSubmit={props.handleSubmit}>\n        <Field\n            component={Textarea}\n            placeholder={'Post text...'}\n            name='text'\n            validate={[isRequired, maxLengthCreator]}\n        />\n        <button>Post</button>\n    </form>\n}\n\nconst NewPostFormContainer = reduxForm({form: 'newPost'})(NewPostForm)\n\nexport default MyPosts;\n","import React from \"react\";\nimport {addPost, updatePost} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         addNewPost: () => {\n//             dispatch(addPostActionCreator())\n//         },\n//         updateNewPostText: (text) => {\n//             dispatch(updatePostActionCreator(text));\n//         }\n//     }\n// }\n\nlet DispatchToProps = {\n    addPost\n};\n\nconst MyPostsContainer = connect(mapStateToProps, DispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nconst Profile = (props) => {\n    if (Object.keys(props.profile).length === 0) {\n        return <Preloader isFetching={props.isFetching} />;\n    }\n    return (\n        <div>\n            <ProfileInfo {...props} />\n            <MyPostsContainer />\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    addPost,\n    getStatusThunkCreator,\n    getUserProfileThunkCreator,\n    setNewStatusThunkCreator,\n    setUserProfile\n} from \"../../redux/profile-reducer\";\nimport {setFetching} from \"../../redux/search-reducer\";\nimport {Redirect, withRouter} from 'react-router';\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.PureComponent {\n    componentDidMount() {\n        if (!this.props.isFetching) {\n            this.props.setFetching();\n        }\n        // вот для чео нам нужен виз роутер. чтобы получить айди с ссылки и сделать запрос\n        this.userId = this.props.match.params.user_id;\n        if (!this.userId) {\n            this.userId = this.props.userId;\n            if (!this.userId) this.props.history.push('/login')\n        }\n        // 13886\n        this.props.getUserProfileThunkCreator(this.userId);\n        this.props.getStatusThunkCreator(this.userId);\n    }\n\n    render() {\n        return <Profile {...this.props} />;\n    }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nconst mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isFetching: state.searchPage.isFetching,\n    userId: state.auth.id,\n    isAuth: state.auth.isAuth,\n});\n\nlet dispatchToProps = {\n    addPost,\n    setUserProfile,\n    setFetching,\n    getUserProfileThunkCreator,\n    getStatusThunkCreator,\n    setNewStatusThunkCreator};\n\n// let withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n//\n// export default connect(mapStateToProps, dispatchToProps)(withUrlDataContainerComponent);\n\nexport default compose(\n    connect(mapStateToProps, dispatchToProps),\n    withRouter\n    )(ProfileContainer);"],"sourceRoot":""}