{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","path","id","className","s","dialog","dialog_item","to","activeClassName","active","src","alt","name","Message","message","sender","recipient","message_user_name","maxLengthCreator","maxLength","MessageFormContainer","reduxForm","form","new_message","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","isRequired","Dialogs","dialogs","messages","dialogs_items","map","item","DialogItem","messages_block","messages_container","data","addMessage","DispatchToProps","compose","connect","state","dialogsPage","newMessageText","isAuth","auth","withAuthRedirect"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,YAAc,6BAA6B,OAAS,wBAAwB,mBAAqB,oCAAoC,eAAiB,gCAAgC,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,UAAY,2BAA2B,kBAAoB,mCAAmC,YAAc,+B,6FCgBjgBC,EAbA,SAACC,GACZ,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,eAAC,IAAD,CAASF,UAAWC,IAAEE,YAAaC,GAAIN,EAAMO,gBAAiBJ,IAAEK,OAAhE,UACI,qBAAKC,IAAI,iEAAiEC,IAAI,KAC9E,4BAAIX,EAAMY,aCGXC,EAVC,SAACb,GACb,OACI,sBACIG,UAAS,UAAKC,IAAEU,QAAP,YAA2C,IAAzBd,EAAMc,QAAQC,OAAeX,IAAEW,OAASX,IAAEY,WADzE,UAEI,mBAAGb,UAAWC,IAAEa,kBAAhB,SAAoCjB,EAAMc,QAAQF,OAClD,4BAAIZ,EAAMc,QAAQA,c,kCC6BxBI,EAAmBC,YAAU,IAa7BC,EAAuBC,YAAU,CAACC,KAAM,WAAjBD,EAXT,SAACrB,GACjB,OAAO,uBAAMG,UAAWC,IAAEmB,YAAaC,SAAUxB,EAAMyB,aAAhD,UACH,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,YAAY,aACZjB,KAAK,UACLkB,SAAU,CAACC,IAAYb,KAE9B,gDAMOc,EA5CC,SAAChC,GAAW,IAEnBiC,EAAqBjC,EAArBiC,QAASC,EAAYlC,EAAZkC,SAMd,OACI,sBAAK/B,UAAWC,IAAE6B,QAAlB,UACI,qBAAK9B,UAAWC,IAAE+B,cAAlB,SACKF,EAAQG,KAAI,SAACC,GAAD,OACT,cAACC,EAAD,CAAsC1B,KAAMyB,EAAKzB,KAAMV,GAAImC,EAAKnC,IAA/CmC,EAAKzB,KAAOyB,EAAKnC,SAG1C,sBAAKC,UAAWC,IAAEmC,eAAlB,UACI,qBAAKpC,UAAWC,IAAEoC,mBAAlB,SACI,qBAAKrC,UAAWC,IAAE8B,SAAlB,SACKA,EAASE,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAAsCvB,QAASuB,GAAjCA,EAAKnC,GAAKmC,EAAKvB,gBAIzC,cAACM,EAAD,CAAsBI,SAnBZ,SAACiB,GACnBzC,EAAM0C,WAAWD,EAAK3B,mB,yBCkB1B6B,EAAkB,CAClBD,gBAOWE,sBACXC,aAjCoB,SAACC,GACrB,MAAO,CACHb,QAASa,EAAMC,YAAYd,QAC3BC,SAAUY,EAAMC,YAAYb,SAC5Bc,eAAgBF,EAAMC,YAAYC,eAClCC,OAAQH,EAAMI,KAAKD,UA4BEN,GACzBQ,IAFWP,CAGbZ","file":"static/js/4.c4bd8ce9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3ddce\",\"dialogs_items\":\"Dialogs_dialogs_items__GcQME\",\"dialog\":\"Dialogs_dialog__3abFY\",\"dialog_item\":\"Dialogs_dialog_item__2N6i3\",\"active\":\"Dialogs_active__35xpH\",\"messages_container\":\"Dialogs_messages_container__1_J3v\",\"messages_block\":\"Dialogs_messages_block__380G9\",\"messages\":\"Dialogs_messages__2vb60\",\"message\":\"Dialogs_message__3Pk1j\",\"sender\":\"Dialogs_sender__ZES1M\",\"recipient\":\"Dialogs_recipient__2cZAN\",\"message_user_name\":\"Dialogs_message_user_name__2C8Ht\",\"new_message\":\"Dialogs_new_message__10bEE\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Dialog = (props) => {\n    let path = `/dialogs/${props.id}`;\n    return (\n        <div className={s.dialog}>\n            <NavLink className={s.dialog_item} to={path} activeClassName={s.active}>\n                <img src=\"https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png\" alt=\"\"/>\n                <p>{props.name}</p>\n            </NavLink>\n        </div>\n    );\n}\n\n\nexport default Dialog;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div\n            className={`${s.message} ${props.message.sender === 1 ? s.sender : s.recipient}`}>\n            <p className={s.message_user_name}>{props.message.name}</p>\n            <p>{props.message.message}</p>\n        </div>\n    );\n}\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {isRequired, maxLength} from \"../utils/validation\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\n\nconst Dialogs = (props) => {\n\n    let {dialogs, messages} = props;\n\n    const addNewMessage = (data) => {\n        props.addMessage(data.message);\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogs_items}>\n                {dialogs.map((item) => (\n                    <DialogItem key={item.name + item.id} name={item.name} id={item.id}/>\n                ))}\n            </div>\n            <div className={s.messages_block}>\n                <div className={s.messages_container}>\n                    <div className={s.messages}>\n                        {messages.map((item) => (\n                            <Message key={item.id + item.message} message={item}/>\n                        ))}\n                    </div>\n                </div>\n                <MessageFormContainer onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    );\n};\n\nconst maxLengthCreator = maxLength(50);\n\nconst MessageForm = (props) => {\n    return <form className={s.new_message} onSubmit={props.handleSubmit}>\n        <Field component={Textarea}\n               placeholder='Message...'\n               name='message'\n               validate={[isRequired, maxLengthCreator]}\n        />\n        <button>Send</button>\n    </form>\n}\n\nconst MessageFormContainer = reduxForm({form: 'dialogs'})(MessageForm);\n\nexport default Dialogs;","import {addMessage,} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n// Оно сразу вызывает store.getState() и в результате у нас здесь просто стейт\nconst mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        newMessageText: state.dialogsPage.newMessageText,\n        isAuth: state.auth.isAuth,\n    }\n}\n\n//callbacks\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         addMessage: () => {\n//             dispatch(addMessageActionCreator());\n//         },\n//         changeMessageText: (text) => {\n//             dispatch(updateMessageActionCreator(text))\n//         }\n//     }\n// }\n\n// это функция которую мы вызываем. она создаст редирект.\n// let redirectContainer = withAuthRedirect(Dialogs);\n//\nlet DispatchToProps = {\n    addMessage\n};\n//\n// const DialogsContainer = connect(mapStateToProps, DispatchToProps)(redirectContainer);\n//\n// export default DialogsContainer;\n\nexport default compose(\n    connect(mapStateToProps, DispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}